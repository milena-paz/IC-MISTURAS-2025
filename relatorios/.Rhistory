add=T,col="darkblue",lty=2,lwd=2)
hist(X1, freq=F, breaks=25,col="orange",border="white")
curve(dMisturaNorm(x,mi,dp,pesos),
add=T,col="darkblue",lty=2,lwd=2)
hist(X1, freq=F, breaks=20,col="orange",border="white")
curve(dMisturaNorm(x,mi,dp,pesos),
add=T,col="darkblue",lty=2,lwd=2)
hist(X1, freq=F, breaks=20,col="orange",border="white",main="Histograma da amostra X1")
curve(dMisturaNorm(x,mi,dp,pesos),
add=T,col="darkblue",lty=2,lwd=2)
hist(X1, freq=F, breaks=20,col="orange",border="white",main="Histograma da amostra x1")
curve(dMisturaNorm(x,mi,dp,pesos),
add=T,col="darkblue",lty=2,lwd=2)
hist(X1, freq=F, breaks=20,col="orange",border="white",main="Histograma da amostra X1")
curve(dMisturaNorm(x,mi,dp,pesos),
add=T,col="darkblue",lty=2,lwd=2)
rMisturaNorm <- function(n,mi,dp,probs){
k<- length(mi)
X<- numeric(n)
U <- runif(n)
p <- cumsum(c(0,probs))
for(i in 1:k){
caso <- U <= p[i+1] & U> p[i]
tam <- sum(caso)
X[caso] <- rnorm(tam,mi[i],dp[i])
}
return(X)
}#Fim função geradora
mi <- 3*( (2/3)^(0:7) - 1)
vars <- (2/3)^(2*(0:7))
pesos <- rep(1/8,8)
X2 <- rMisturaNorm(n, mi, sqrt(vars), pesos)
#| code-fold: true
hist(X2, freq=F, breaks=20,col="orange",border="white",main="Histograma da amostra X2")
curve(dMisturaNorm(x,mi,dp,pesos),
add=T,col="darkblue",lty=2,lwd=2)
rMisturaNorm <- function(n,mi,dp,probs){
k<- length(mi)
X<- numeric(n)
U <- runif(n)
p <- cumsum(c(0,probs))
for(i in 1:k){
caso <- U <= p[i+1] & U> p[i]
tam <- sum(caso)
X[caso] <- rnorm(tam,mi[i],dp[i])
}
return(X)
}#Fim função geradora
mi <- 3*( (2/3)^(0:7) - 1)
vars <- (2/3)^(2*(0:7))
pesos <- rep(1/8,8)
X2 <- rMisturaNorm(n, mi, sqrt(vars), pesos)
rMisturaNorm <- function(n,mi,dp,probs){
k<- length(mi)
X<- numeric(n)
U <- runif(n)
p <- cumsum(c(0,probs))
for(i in 1:k){
caso <- U <= p[i+1] & U> p[i]
tam <- sum(caso)
X[caso] <- rnorm(tam,mi[i],dp[i])
}
return(X)
}#Fim função geradora
mi <- 3*( (2/3)^(0:7) - 1)
dp <- sqrt((2/3)^(2*(0:7)))
pesos <- rep(1/8,8)
X2 <- rMisturaNorm(n, mi, dp, pesos)
#| code-fold: true
hist(X2, freq=F, breaks=20,col="orange",border="white",main="Histograma da amostra X2")
curve(dMisturaNorm(x,mi,dp,pesos),
add=T,col="darkblue",lty=2,lwd=2)
n <- 200
mi <- c(160,173)
dp <- sqrt(c(15,12))
pesos <- c(.51,0.49)
X1 <- rMisturaNorm(n,mi,dp,pesos)
#| code-fold: true
hist(X1, freq=F, breaks=20,col="orange",border="white",main="Histograma da amostra X1")
curve(dMisturaNorm(x,mi,dp,pesos),
add=T,col="darkblue",lty=2,lwd=2)
rmultinom(2,10,c(1/2,.5))
rMisturaNormAlt <- function(n,mi,dp,probs){
k<- length(mi)
X<- numeric(n)
U <- rmultinom(k,n,probs)
switch
return(X)
}#Fim função geradora
n <- 200
mi <- c(160,173)
dp <- sqrt(c(15,12))
pesos <- c(.51,0.49)
X1 <- rMisturaNormAlt(n,mi,dp,pesos)
#| code-fold: true
hist(X1, freq=F, breaks=20,col="orange",border="white",main="Histograma da amostra X1")
curve(dMisturaNorm(x,mi,dp,pesos),
add=T,col="darkblue",lty=2,lwd=2)
rmultinom(4,10,c(1/4,1/4,1/4,1/4))
rmultinom(4,20,c(1/4,1/4,1/4,1/4))
rmultinom(10, size = 12, prob = c(0.1,0.2,0.8))
rMisturaNormAlt <- function(n,mi,dp,probs){
k<- length(mi)
X<- numeric(n)
U <- rmultinom(n,k,probs)
return(U)
}#Fim função geradora
n <- 200
mi <- c(160,173)
dp <- sqrt(c(15,12))
pesos <- c(.51,0.49)
X1 <- rMisturaNormAlt(n,mi,dp,pesos)
X1
View(X1)
rMisturaNormAlt <- function(n,mi,dp,probs){
k<- length(mi)
X<- numeric(n)
U <- rmultinom(1,n,probs)
return(U)
}#Fim função geradora
X1
View(X1)
rmultinom(1,n,pesos)
as.vector(rmultinom(1,n,pesos))
as.vector(rmultinom(1,n,pesos)) |> cumsum()
x<-as.vector(rmultinom(1,n,pesos))
cumsum(c(0,x))
rMisturaNormAlt <- function(n,mi,dp,probs){
k<- length(mi)
tam <- rmultinom(1,n,probs)
lims <- cumsum(c(0,tam))
for(i in 1:k){
X[lims[i]+1,lims[i+1]] <- rnorm(tam[i],mi[i],dp[i])
}
return(X)
}#Fim função geradora
n <- 200
mi <- c(160,173)
dp <- sqrt(c(15,12))
pesos <- c(.51,0.49)
X1 <- rMisturaNormAlt(n,mi,dp,pesos)
rMisturaNormAlt <- function(n,mi,dp,probs){
k<- length(mi)
X<- numeric(n)
tam <- rmultinom(1,n,probs)
lims <- cumsum(c(0,tam))
for(i in 1:k){
X[lims[i]+1,lims[i+1]] <- rnorm(tam[i],mi[i],dp[i])
}
return(X)
}#Fim função geradora
n <- 200
mi <- c(160,173)
dp <- sqrt(c(15,12))
pesos <- c(.51,0.49)
X1 <- rMisturaNormAlt(n,mi,dp,pesos)
rMisturaNormAlt <- function(n,mi,dp,probs){
k<- length(mi)
X<- numeric(n)
tam <- as.vector(rmultinom(1,n,probs))
lims <- cumsum(c(0,tam))
for(i in 1:k){
X[lims[i]+1,lims[i+1]] <- rnorm(tam[i],mi[i],dp[i])
}
return(X)
}#Fim função geradora
n <- 200
mi <- c(160,173)
dp <- sqrt(c(15,12))
pesos <- c(.51,0.49)
X1 <- rMisturaNormAlt(n,mi,dp,pesos)
rMisturaNormAlt <- function(n,mi,dp,probs){
k<- length(mi)
X<- numeric(n)
tam <- as.vector(rmultinom(1,n,probs))
lims <- cumsum(c(0,tam))
for(i in 1:k){
X[lims[i]+1:lims[i+1]] <- rnorm(tam[i],mi[i],dp[i])
}
return(X)
}#Fim função geradora
n <- 200
mi <- c(160,173)
dp <- sqrt(c(15,12))
pesos <- c(.51,0.49)
X1 <- rMisturaNormAlt(n,mi,dp,pesos)
rMisturaNormAlt <- function(n,mi,dp,probs){
k<- length(mi)
X<- numeric(n)
tam <- as.vector(rmultinom(1,n,probs))
lims <- cumsum(c(0,tam))
for(i in 1:k){
X[lims[i]+1:lims[i+1]] <- rnorm(tam[i],mi[i],dp[i])
}
return(X)
}#Fim função geradora
rMisturaNormAlt <- function(n,mi,dp,probs){
browser()
k<- length(mi)
X<- numeric(n)
tam <- as.vector(rmultinom(1,n,probs))
lims <- cumsum(c(0,tam))
for(i in 1:k){
X[lims[i]+1:lims[i+1]] <- rnorm(tam[i],mi[i],dp[i])
}
return(X)
}#Fim função geradora
n <- 200
mi <- c(160,173)
dp <- sqrt(c(15,12))
pesos <- c(.51,0.49)
X1 <- rMisturaNormAlt(n,mi,dp,pesos)
rMisturaNormAlt <- function(n,mi,dp,probs){
browser()
k<- length(mi)
X<- numeric(n)
tam <- as.vector(rmultinom(1,n,probs))
lims <- cumsum(c(0,tam))
for(i in 1:k){
X[lims[i]+1:lims[i+1]] <- rnorm(tam[i],mi[i],dp[i])
}
return(X)
}#Fim função geradora
n <- 10
mi <- c(160,173)
dp <- sqrt(c(15,12))
pesos <- c(.51,0.49)
X1 <- rMisturaNormAlt(n,mi,dp,pesos)
rMisturaNormAlt <- function(n,mi,dp,probs){
browser()
k<- length(mi)
X<- numeric(n)
tam <- as.vector(rmultinom(1,n,probs))
lims <- cumsum(c(0,tam))
for(i in 1:k){
X[lims[i]+1:lims[i+1]] <- rnorm(tam[i],mi[i],dp[i])
}
return(X)
}#Fim função geradora
n <- 10
mi <- c(160,173)
dp <- sqrt(c(15,12))
pesos <- c(.51,0.49)
X1 <- rMisturaNormAlt(n,mi,dp,pesos)
rMisturaNormAlt <- function(n,mi,dp,probs){
browser()
k<- length(mi)
X<- numeric(n)
tam <- as.vector(rmultinom(1,n,probs))
lims <- cumsum(c(0,tam))
for(i in 1:k){
X[lims[i]+1:lims[i+1]] <- rnorm(tam[i],mi[i],dp[i])
}
return(X)
}#Fim função geradora
n <- 5
mi <- c(160,173)
dp <- sqrt(c(15,12))
pesos <- c(.51,0.49)
X1 <- rMisturaNormAlt(n,mi,dp,pesos)
rMisturaNormAlt <- function(n,mi,dp,probs){
browser()
k<- length(mi)
X<- numeric(n)
tam <- as.vector(rmultinom(1,n,probs))
lims <- cumsum(c(0,tam))
for(i in 1:k){
X[(lims[i]+1):(lims[i+1])] <- rnorm(tam[i],mi[i],dp[i])
}
return(X)
}#Fim função geradora
rMisturaNormAlt <- function(n,mi,dp,probs){
browser()
k<- length(mi)
X<- numeric(n)
tam <- as.vector(rmultinom(1,n,probs))
lims <- cumsum(c(0,tam))
for(i in 1:k){
X[(lims[i]+1):lims[i+1]] <- rnorm(tam[i],mi[i],dp[i])
}
return(X)
}#Fim função geradora
n <- 5
mi <- c(160,173)
dp <- sqrt(c(15,12))
pesos <- c(.51,0.49)
X1 <- rMisturaNormAlt(n,mi,dp,pesos)
rMisturaNormAlt <- function(n,mi,dp,probs){
k<- length(mi)
X<- numeric(n)
tam <- as.vector(rmultinom(1,n,probs))
lims <- cumsum(c(0,tam))
for(i in 1:k){
X[(lims[i]+1):lims[i+1]] <- rnorm(tam[i],mi[i],dp[i])
}
return(X)
}#Fim função geradora
n <- 200
mi <- c(160,173)
dp <- sqrt(c(15,12))
pesos <- c(.51,0.49)
X1 <- rMisturaNormAlt(n,mi,dp,pesos)
#| code-fold: true
hist(X1, freq=F, breaks=20,col="orange",border="white",main="Histograma da amostra X1")
curve(dMisturaNorm(x,mi,dp,pesos),
add=T,col="darkblue",lty=2,lwd=2)
dMisturaNorm <- function(x,mi,dp,probs){
#---------------------------------------#
# x: vetor de valores a serem avaliados #
# mi: vetor de médias                   #
# dp: vetor de desvios padrão           #
# probs: vetor de pesos das componentes #
#---------------------------------------#
n <- length(mi)
if(length(x)==1)
#caso especial, quando x não é vetor
return(sum(probs*dnorm(x,mi,dp)))
return(rowSums(sapply(1:n,function(k) probs[k]*dnorm(x,mi[k],dp[k]))))
}
#| code-fold: true
hist(X1, freq=F, breaks=20,col="orange",border="white",main="Histograma da amostra X1")
curve(dMisturaNorm(x,mi,dp,pesos),
add=T,col="darkblue",lty=2,lwd=2)
n <- 200
mi <- c(160,173)
dp <- sqrt(c(15,12))
pesos <- c(.51,0.49)
X1 <- rMisturaNorm(n,mi,dp,pesos)
rMisturaNorm <- function(n,mi,dp,probs){
k<- length(mi)
X<- numeric(n)
U <- runif(n)
p <- cumsum(c(0,probs))
for(i in 1:k){
caso <- U <= p[i+1] & U> p[i]
tam <- sum(caso)
X[caso] <- rnorm(tam,mi[i],dp[i])
}
return(X)
}#Fim função geradora
n <- 200
mi <- c(160,173)
dp <- sqrt(c(15,12))
pesos <- c(.51,0.49)
X1 <- rMisturaNorm(n,mi,dp,pesos)
#| code-fold: true
hist(X1, freq=F, breaks=20,col="orange",border="white",main="Histograma da amostra X1")
curve(dMisturaNorm(x,mi,dp,pesos),
add=T,col="darkblue",lty=2,lwd=2)
n <- 200
mi <- c(160,173)
dp <- sqrt(c(15,12))
pesos <- c(.51,0.49)
X1 <- rMisturaNorm(n,mi,dp,pesos)
#| code-fold: true
hist(X1, freq=F, breaks=20,col="orange",border="white",main="Histograma da amostra X1")
curve(dMisturaNorm(x,mi,dp,pesos),
add=T,col="darkblue",lty=2,lwd=2)
mi <- 3*( (2/3)^(0:7) - 1)
dp <- sqrt((2/3)^(2*(0:7)))
pesos <- rep(1/8,8)
X2 <- rMisturaNormAlt(n, mi, dp, pesos)
#| fig-align: center
#| code-fold: true
hist(X2, freq=F, breaks=20,col="orange",border="white",main="Histograma da amostra X2")
curve(dMisturaNorm(x,mi,dp,pesos),
add=T,col="darkblue",lty=2,lwd=2)
#| fig-align: center
#| code-fold: true
amostras <- list(X1,X2,X3,X4)
#| code-fold: true
#| fig-align: center
curve(.51*dnorm(x,160,sqrt(15))+.49*dnorm(x,173,sqrt(12)),
main= "Mistura a",ylab="densidade",
from=150,to=190,lwd=2)
dMisturaNorm <- function(x,mi,dp,probs){
#---------------------------------------#
# x: vetor de valores a serem avaliados #
# mi: vetor de médias                   #
# dp: vetor de desvios padrão           #
# probs: vetor de pesos das componentes #
#---------------------------------------#
n <- length(mi)
if(length(x)==1)
#caso especial, quando x não é vetor
return(sum(probs*dnorm(x,mi,dp)))
return(rowSums(sapply(1:n,function(k) probs[k]*dnorm(x,mi[k],dp[k]))))
}
#| fig-align: center
#| code-fold: true
#implementação da mistura:
mi <- 3*( (2/3)^(0:7) - 1)
vars <- (2/3)^(2*(0:7))
pesos <- rep(1/8,8)
curve(dMisturaNorm(x,mi,sqrt(vars),pesos),
main= "Mistura b",ylab="densidade",
from=-3.5,to=1,lwd=2)
#| fig-align: center
# note que foi usado o valor de x-1, pois a parametrização do R difere da minha
x<- 1:50
plot(.5*dgeom(x-1,1/2)+.5*dgeom(x-1,1/3),
type="o",pch=".",cex=4,
main= "Mistura c",ylab="densidade",xlab="x",lwd=2)
#| fig-align: center
x<- 1:40
plot(.15*dpois(x,3)+.75*dpois(x,10)+.1*dpois(x,1.5),
type="o",pch=".",cex=4,
main= "Mistura d",ylab="densidade",xlab="x",lwd=2)
#| fig-align: center
curve(0.4*dunif(x)+0.6*dbeta(x,2,6),
main= "Mistura e",ylab="densidade",
lwd=2,ylim=c(0,2.1))
rMisturaNorm <- function(n,mi,dp,probs){
k<- length(mi)
X<- numeric(n)
U <- runif(n)
p <- cumsum(c(0,probs))
for(i in 1:k){
caso <- U <= p[i+1] & U> p[i]
tam <- sum(caso)
X[caso] <- rnorm(tam,mi[i],dp[i])
}
return(X)
}#Fim função geradora
n <- 200
mi <- c(160,173)
dp <- sqrt(c(15,12))
pesos <- c(.51,0.49)
X1 <- rMisturaNorm(n,mi,dp,pesos)
#| code-fold: true
#| fig-align: center
hist(X1, freq=F, breaks=20,col="orange",border="white",main="Histograma da amostra X1")
curve(dMisturaNorm(x,mi,dp,pesos),
add=T,col="darkblue",lty=2,lwd=2)
mi <- 3*( (2/3)^(0:7) - 1)
dp <- sqrt((2/3)^(2*(0:7)))
pesos <- rep(1/8,8)
X2 <- rMisturaNorm(n, mi, dp, pesos)
#| fig-align: center
#| code-fold: true
hist(X2, freq=F, breaks=20,col="orange",border="white",main="Histograma da amostra X2")
curve(dMisturaNorm(x,mi,dp,pesos),
add=T,col="darkblue",lty=2,lwd=2)
rMisturaNormAlt <- function(n,mi,dp,probs){
k<- length(mi)
X<- numeric(n)
tam <- as.vector(rmultinom(1,n,probs))
lims <- cumsum(c(0,tam))
for(i in 1:k){
X[(lims[i]+1):lims[i+1]] <- rnorm(tam[i],mi[i],dp[i])
}
return(X)
}#Fim função geradora
n <- 200
mi <- c(160,173)
dp <- sqrt(c(15,12))
pesos <- c(.51,0.49)
X3 <- rMisturaNormAlt(n,mi,dp,pesos)
#| fig-align: center
#| code-fold: true
hist(X3, freq=F, breaks=20,col="orange",border="white",main="Histograma da amostra X3")
curve(dMisturaNorm(x,mi,dp,pesos),
add=T,col="darkblue",lty=2,lwd=2)
mi <- 3*( (2/3)^(0:7) - 1)
dp <- sqrt((2/3)^(2*(0:7)))
pesos <- rep(1/8,8)
X4 <- rMisturaNormAlt(n, mi, dp, pesos)
#| fig-align: center
#| code-fold: true
hist(X4, freq=F, breaks=20,col="orange",border="white",main="Histograma da amostra X4")
curve(dMisturaNorm(x,mi,dp,pesos),
add=T,col="darkblue",lty=2,lwd=2)
#| fig-align: center
#| code-fold: true
amostras <- list(X1,X2,X3,X4)
for(i in 1:4){
hist(amostras[[i]], freq=F, breaks=20,col="orange",border="white",main=paste0("Histograma da amostra X",i))
}
#| fig-align: center
#| code-fold: true
par(mfrow=c(2,2))
amostras <- list(X1,X2,X3,X4)
for(i in 1:4){
hist(amostras[[i]], freq=F, breaks=20,col="orange",border="white",main=paste0("Histograma da amostra X",i))
}
#| fig-align: center
#| code-fold: true
par(mfrow=c(2,2),mar=c(3.1,2.1,2,1))
amostras <- list(X1,X2,X3,X4)
for(i in 1:4){
hist(amostras[[i]], freq=F, breaks=20,col="orange",border="white",main=paste0("Histograma da amostra X",i))
}
#| fig-align: center
#| code-fold: true
par(mfrow=c(2,2),mar=c(3.1,2.1,2,1))
amostras <- list(X1,X2,X3,X4)
for(i in 1:4){
hist(amostras[[i]], freq=F, breaks=20,
col="orange",border="white",main=paste0("Histograma da amostra X",i))
if(i%%2==0){
mi <- 3*( (2/3)^(0:7) - 1)
dp <- sqrt((2/3)^(2*(0:7)))
pesos <- rep(1/8,8)
}
else{
mi <- c(160,173)
dp <- sqrt(c(15,12))
pesos <- c(.51,0.49)
}
curve(dMisturaNorm(x,mi,dp,pesos),
add=T,col="darkblue",lty=2,lwd=2)
}
